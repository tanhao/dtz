{"version":3,"sources":["SocketIO.js"],"names":["SIO","cc","Class","extends","Component","statics","addr","sio","handlers","lastSendTime","lastRecieveTime","delayMS","connect","fnConnect","fnError","self","log","opts","window","io","on","data","connected","console","close","timeout","error","key","handler","value","heartbeat","Date","now","disconnect","send","event","JSON","stringify","emit","ping"],"mappings":"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","file":"SocketIO.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["/*\r\nif(window.io == null){\r\n    window.io = require(\"socket.io\");\r\n}\r\n*/\r\nvar SIO=cc.Class({\r\n    extends: cc.Component,\r\n\r\n    /*\r\n    properties: {\r\n        lastSendTime:0,\r\n        lastRecieveTime:0,\r\n        delayMS:0,\r\n    },\r\n    */\r\n\r\n    statics:{\r\n        addr:null,\r\n        sio:null,\r\n        handlers:{},\r\n        lastSendTime:0,\r\n        lastRecieveTime:0,\r\n        delayMS:0,\r\n        //fnDisconnect:null,\r\n        connect:function(fnConnect,fnError){\r\n            var self=this;\r\n            cc.log(\"connect to : \"+this.addr);\r\n            var opts = {\r\n                'reconnection':false,\r\n                'force new connection': true,\r\n                'transports':['websocket', 'polling']\r\n            }\r\n            this.sio = window.io.connect(this.addr,opts);\r\n            this.sio.on('connect',function(data){\r\n                self.sio.connected = true;\r\n                fnConnect(data);\r\n            });\r\n            this.sio.on('disconnect',function(data){\r\n                console.log(\"disconnect\");\r\n                self.sio.connected = false;\r\n                self.close();\r\n            });\r\n            this.sio.on('reconnect',function(){\r\n                console.log('reconnect');\r\n            });\r\n            this.sio.on('connect_error',function (){\r\n                console.log('connect_error');\r\n            });\r\n            this.sio.on('connect_timeout', (timeout) => {\r\n                console.log('connect_timeout');\r\n            });\r\n            this.sio.on('reconnect_error', (error) => {\r\n                console.log('reconnect_error');\r\n            });\r\n            this.sio.on('reconnect_failed', (error) => {\r\n                console.log('reconnect_failed');\r\n            });\r\n            this.sio.on('error', (error) => {\r\n                console.log('error');\r\n                fnError(error);\r\n            });\r\n\r\n            for(var key in this.handlers){\r\n                var handler = this.handlers[key];\r\n                if(typeof(value) == \"function\"){\r\n                    this.sio.on(key,value);\r\n                }\r\n            }\r\n\r\n            this.heartbeat();\r\n        },\r\n        heartbeat:function(){\r\n            var self=this;\r\n            this.sio.on('ping',function(){\r\n                self.lastRecieveTime = Date.now();\r\n                self.delayMS = self.lastRecieveTime - self.lastSendTime;\r\n                console.log('ping:'+self.delayMS);\r\n            });\r\n        },\r\n        close:function(){\r\n            if(this.sio && this.sio.connected){\r\n                this.sio.connected = false;\r\n                this.sio.disconnect();\r\n            }\r\n            this.sio = null;\r\n        },\r\n        send:function(event,data){\r\n            if(this.sio&&this.sio.connected){\r\n                if(data&&typeof(data)=='object'){\r\n                    data==JSON.stringify(data);\r\n                }\r\n                this.sio.emit(event,data);\r\n            }\r\n        },\r\n        ping:function(){\r\n            if(this.sio){\r\n                this.lastSendTime=Date.now();\r\n                this.send('ping');\r\n            }\r\n        }\r\n\r\n    }\r\n});"]}