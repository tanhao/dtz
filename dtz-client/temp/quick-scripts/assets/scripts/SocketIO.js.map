{"version":3,"sources":["SocketIO.js"],"names":["SIO","cc","Class","extends","Component","statics","addr","sio","handlers","fnDisconnect","isPinging","lastSendTime","lastRecieveTime","delay","addHandler","event","fn","console","log","handler","data","JSON","parse","on","connect","fnConnect","fnError","self","opts","window","io","connected","close","timeout","error","Object","keys","length","key","heartbeat","Date","now","th","game","EVENT_HIDE","ping","setInterval","bind","disconnect","send","stringify","emit"],"mappings":"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","file":"SocketIO.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["/*\r\nif(window.io == null){\r\n    window.io = require(\"socket.io\");\r\n}\r\n*/\r\nvar SIO=cc.Class({\r\n    extends: cc.Component,\r\n\r\n    statics:{\r\n        addr:null,\r\n        sio:null,\r\n        handlers:{},\r\n        fnDisconnect:null,\r\n        isPinging:false,\r\n        lastSendTime:0,\r\n        lastRecieveTime:0,\r\n        delay:0,\r\n        //fnDisconnect:null,\r\n        addHandler:function(event,fn){\r\n            if(this.handlers[event]){\r\n                console.log(\"event:\" + event + \"' handler has been registered.\");\r\n                return;\r\n            }\r\n            var handler = function(data){\r\n                if(event != \"disconnect\" && typeof(data) == \"string\"){\r\n                    data = JSON.parse(data);\r\n                }\r\n                fn(data);\r\n            };\r\n            this.handlers[event] = handler; \r\n            if(this.sio){\r\n                console.log(\"register event: \" + event);\r\n                this.sio.on(event,handler);\r\n            }\r\n        },\r\n        connect:function(fnConnect,fnError){\r\n            var self=this;\r\n            cc.log(\"connect to : \"+this.addr);\r\n            var opts = {\r\n                'reconnection':false,\r\n                'force new connection': true,\r\n                'transports':['websocket', 'polling']\r\n            }\r\n            this.sio = window.io.connect(this.addr,opts);\r\n            this.sio.on('connect',function(data){\r\n                self.sio.connected = true;\r\n                fnConnect(data);\r\n            });\r\n            this.sio.on('disconnect',function(data){\r\n                console.log(\"disconnect\");\r\n                self.sio.connected = false;\r\n                self.close();\r\n            });\r\n            this.sio.on('reconnect',function(){\r\n                console.log('reconnect');\r\n            });\r\n            this.sio.on('connect_error',function (){\r\n                console.log('connect_error');\r\n            });\r\n            this.sio.on('connect_timeout', (timeout) => {\r\n                console.log('connect_timeout');\r\n            });\r\n            this.sio.on('reconnect_error', (error) => {\r\n                console.log('reconnect_error');\r\n            });\r\n            this.sio.on('reconnect_failed', (error) => {\r\n                console.log('reconnect_failed');\r\n            });\r\n            this.sio.on('error', (error) => {\r\n                console.log('error');\r\n                fnError(error);\r\n            });\r\n\r\n            cc.log(\"==============>>size:\"+Object.keys(this.handlers).length+\" is connect:\"+(!!this.sio));\r\n            for(var key in this.handlers){\r\n                var handler = this.handlers[key];\r\n                cc.log(key+\":\"+typeof(handler))\r\n                if(typeof(handler) == \"function\"){\r\n                    if(key == 'disconnect'){\r\n                        this.fnDisconnect = handler;\r\n                    }else{\r\n                        console.log(\"register event: \" + key);\r\n                        this.sio.on(key,handler);         \r\n                    }\r\n                }\r\n            }\r\n\r\n            this.heartbeat();\r\n        },\r\n        heartbeat:function(){\r\n            var self=this;\r\n            this.sio.on('th-pong',function(){\r\n                self.lastRecieveTime = Date.now();\r\n                self.delay = self.lastRecieveTime - self.lastSendTime;\r\n                console.log('th-pong:',self.delay,self==th.sio);\r\n            });\r\n            if(!self.isPinging){\r\n                cc.game.on(cc.game.EVENT_HIDE,function(){\r\n                    self.ping();\r\n                });\r\n                //每5秒ping一下服务器\r\n                setInterval(function(){\r\n                    if(self.sio){\r\n                        self.ping();                \r\n                    }\r\n                }.bind(this),5000);\r\n                /*\r\n                //每500毫秒检查一次最后收到消息时间，如果大于10秒就是断开\r\n                setInterval(function(){\r\n                    if(self.sio){\r\n                        if(Date.now() - self.lastRecieveTime > 10000){\r\n                            self.close();\r\n                        }         \r\n                    }\r\n                }.bind(this),500);\r\n                */\r\n            }   \r\n        },\r\n        close:function(){\r\n            if(this.sio && this.sio.connected){\r\n                this.sio.connected = false;\r\n                this.sio.disconnect();\r\n            }\r\n            this.sio = null;\r\n            if(this.fnDisconnect){\r\n                this.fnDisconnect();\r\n                this.fnDisconnect = null;\r\n            }\r\n        },\r\n        send:function(event,data){\r\n            if(this.sio&&this.sio.connected){\r\n                if(data&&typeof(data)=='object'){\r\n                    data==JSON.stringify(data);\r\n                }\r\n                this.sio.emit(event,data);\r\n            }\r\n        },\r\n        ping:function(){\r\n            if(this.sio){\r\n                this.lastSendTime=Date.now();\r\n                this.send('th-ping');\r\n            }\r\n        }\r\n\r\n    }\r\n});"]}